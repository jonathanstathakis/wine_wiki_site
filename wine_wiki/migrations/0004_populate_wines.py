# Generated by Django 5.2.1 on 2025-07-21 00:56

from django.db import migrations, transaction
from pathlib import Path
import csv
import os


def import_wines(apps, schema_editor):
    exported_data_path = Path(os.environ["WINE_LIST_DATA_DIR"])

    wine_list_path = exported_data_path / "wine_list.csv"

    SubSection = apps.get_model("wine_wiki", "SubSection")
    Section = apps.get_model("wine_wiki", "Section")
    Wine = apps.get_model("wine_wiki", "Wine")

    db_alias = schema_editor.connection.alias

    # wines = []
    with open(wine_list_path, "r") as f:
        csv_reader = csv.DictReader(f)

        for idx, row in [(idx, row) for idx, row in enumerate(csv_reader)]:
            # convert empty strings to nulls.
            cleaned_row = {k: (v if v != "" else None) for k, v in row.items()}
            section = Section.objects.get(section=cleaned_row.pop("section"))
            subsection = SubSection.objects.get(
                subsection=cleaned_row.pop("subsection")
            )
            wine = Wine(section=section, subsection=subsection, **cleaned_row)

            try:
                wine.save()
            except Exception as e:
                raise e

            # wines.append(wine)


def reverse_import_wines(apps, schema_editor):
    Wine = apps.get_model("wine_wiki", "Wine")
    Wine.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("wine_wiki", "0001_initial"),
        ("wine_wiki", "0002_populate_section"),
        ("wine_wiki", "0003_populate_subsection"),
    ]

    operations = [
        migrations.RunPython(code=import_wines, reverse_code=reverse_import_wines)
    ]
